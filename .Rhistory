require(fredr)
require(stringr)
require(tibble)
require(tidyr)
require(dplyr)
require(plyr)
dat$title <- sub("for Small and Medium Enterprises", "Small and Medium Enterprises", dat$title)
dat_split <- dat %>%
separate(title, c("title", "state"), sep = "for ") %>%
select(c(date, series_id, value, title, state,
observation_start, observation_end, frequency, units, seasonal_adjustment))
obs_breakdown <- dplyr::count(dat_split, state)
View(dat_split)
dat_test <- read.csv("/Users/gummoxxx/dev/dissertation_scraping/FAS.csv")
Use of Financial Services: Key Indicators, Small and Medium Enterprises (SME) Depositors with Commercial Banks (% of Non-financial Corporation Depositors with Commercial Banks)
View(dat_test)
unique(dat_test$Indicator.Name)
dat <- read.csv("/Users/gummoxxx/Desktop/my452_exercises/W5/dat.csv")
require(dplyr)
model1 <- glm(formula = usemod ~ urban + educ + age, family = binomial(), data = logistic)
summary(model1)
model1 <- glm(formula = usemod ~ urban + educ + age, family = binomial(), data = dat)
load("/Users/gummoxxx/Desktop/my452_exercises/W5/logistic.Rdata")
model1 <- glm(formula = usemod ~ urban + educ + age, family = binomial(), data = dat)
summary(model1)
model1 <- glm(formula = usemod ~ urban + educ + age, family = binomial(), data = dat)
model1 <- glm(formula = usemod ~ urban + educ + age, family = binomial(), data = logistic)
summary(model1)
url <- "https://www.swiftbic.com/banks-in-MEXICO.html"
require(httr)
require(xml)
require(XML)
require(rvest)
url <- "https://www.swiftbic.com/banks-in-MEXICO.html"
t <- read_html(url)
html <- read_html(url)
nodes <- nodes(html)
nodes <- html_nodes(html)
nodes <- html_table(html)
table <- html_table(html)
require(dplyr)
require(tidyverse)
table <- html_table(html) %>%
as_tibble()
table <- html_table(html) %>%
as_data_frame()
table <- html_table(html) %>%
data_frame()
View(table)
View(table[[1]][[1]])
table <- html_table(html)[2] %>%
data_frame()
table <- html_table(html)[2] %>%
data_frame()
table <- html_table(html)[2] %>%
data_frame()
table <- html_table(html)[3] %>%
data_frame()
table <- html_table(html)[[2]] %>%
data_frame()
table <- html_table(html)[[1]] %>%
data_frame()
View(table)
url_2 <- "https://en.wikipedia.org/wiki/List_of_banks_in_Mexico"
html_2 <- read_html(url_2)
?html_nodes
url_2 <- "https://en.wikipedia.org/wiki/List_of_banks_in_Mexico"
html_2 <- read_html(url_2)
nodes_2 <- html_nodes(html_2, xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/ul[3]")
content_2 <- html_text(nodes_2)
content_2 <- html_table(nodes_2)
content_2 <- html_text(nodes_2)
for (i in content_2) {
if (i in table$`BANK NAME`) {print(TRUE)} else {print(FALSE)}
}
for (i in content_2) {
if (i %in% table$`BANK NAME`) {print(TRUE)} else {print(FALSE)}
}
content_2
?str_split
content_2 <- html_text(nodes_2) %>% str_split("\\n")
content_2
for (i in content_2) {print(i)}
source("~/.active-rstudio-document")
for (i in content_2) {
if (i %like% table$`BANK NAME`) {
print(TRUE)
} else {
print(FALSE)
}
}
require(dplyr)
for (i in content_2) {
if (i %like% table$`BANK NAME`) {
print(TRUE)
} else {
print(FALSE)
}
}
content_2
view(table_1)
require(data.table)
for (i in content_2) {
if (i %like% table$`BANK NAME`) { # %like% not available?
print(TRUE)
} else {
print(FALSE)
}
}
for (i in content_2) {
if (as_string(i) %like% table$`BANK NAME`) { # %like% not available?
print(TRUE)
} else {
print(FALSE)
}
}
if (as_vector(i) %like% table$`BANK NAME`) { # %like% not available?
print(TRUE)
} else {
print(FALSE)
}
}
for (i in content_2) {
if (i %like% table$`BANK NAME`[i]) { # %like% not available?
print(TRUE)
} else {
print(FALSE)
}
}
for (i in length(content_2)) {
if (content_2[i] %like% table$`BANK NAME`[i]) { # %like% not available?
print(TRUE)
} else {
print(FALSE)
}
}
for (i in length(content_2)) {print(content_2[i])}
length(content_2)
content_2 <- html_text(nodes_2) %>% str_split("\\n") %>% unlist()
for (i in length(content_2)) {
if (content_2[i] %like% table$`BANK NAME`[i]) { # %like% not available?
print(TRUE)
} else {
print(FALSE)
}
}
length(content_2)
for (i in length(content_2)) {print(content_2[i])}
length(content_2)
for (i in nrow(table_1)) {print(table$`BANK NAME`[i])}
nrow(table_1)
for (i in nrow(table_1)) {print(table$`BANK NAME`[[i]])}
for (i in nrow(table_1)) {print(table[[1]][1])}
for (i in 1:nrow(table_1)) {print(table[[1]][1])}
for (i in 1:nrow(table_1)) {print(table[[1]][1]); print(i)}
for (i in 1:nrow(table_1)) {print(table[[1]][i]); print(i)}
for (i in length(content_2)) {
if (content_2[i] %like% table[$`BANK NAME`[[1]][i]) {
print(TRUE)
} else {
print(FALSE)
}
}
for (i in length(content_2)) {
if (content_2[i] %like% table$`BANK NAME`[[1]][i]) {
print(TRUE)
} else {
print(FALSE)
}
}
for (i in length(content_2)) {
if (content_2[i] %like% table$[[1]][i]) {
print(TRUE)
} else {
print(FALSE)
}
}
for (i in length(content_2)) {
if (content_2[i] %like% table[[1]][i]) {
print(TRUE)
} else {
print(FALSE)
}
}
for (i in 1:length(content_2)) {
if (content_2[i] %like% table[[1]][i]) {
print(TRUE)
} else {
print(FALSE)
}
}
banks <- function(unique_states) {
for (i in range(1:length(unique_states))) {
url <- sprintf("https://www.switfbic.com/banks-in-[%g].html", unique_states[i])
print(url)
}
}
states <- read.csv("/Users/gummoxxx/Documents/dissertation_data/dissertation/data/index.csv", sep = ";") # 2017 - 2021
unique_states <- unique(states$Country)
banks <- function(unique_states) {
for (i in range(1:length(unique_states))) {
url <- sprintf("https://www.switfbic.com/banks-in-[%g].html", toupper(unique_states[i]))
print(url)
}
}
banks()
banks <- function(unique_states = unique_states) {
for (i in range(1:length(unique_states))) {
url <- sprintf("https://www.switfbic.com/banks-in-[%g].html", toupper(unique_states[i]))
print(url)
}
}
banks()
for (i in range(1:length(unique_states))) {
url <- sprintf("https://www.switfbic.com/banks-in-[%g].html", toupper(unique_states[i]))
print(url)
}
for (i in range(1:length(unique_states))) {
url <- sprintf("https://www.switfbic.com/banks-in-[%s].html", toupper(unique_states[i]))
print(url)
}
for (i in range(1:length(unique_states))) {
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(unique_states[i]))
print(url)
}
for (i in range(1:length(unique_states))) {
print(i)
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(unique_states[i]))
print(url)
}
for (i in 1:length(unique_states)) {
print(i)
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(unique_states[i]))
print(url)
}
banks <- function(unique_states = unique_states) {
for (i in 1:length(unique_states)) {
print(i)
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(unique_states[i]))
print(url)
}
}
banks()
banks <- function(unique_states) {
for (i in 1:length(unique_states)) {
print(i)
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(unique_states[i]))
print(url)
}
}
banks()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
print(i)
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
}
}
banks()
banks_tibble <- list()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(states[i]))
#print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
require(rvest)
banks_tibble <- list()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(states[i]))
#print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.switfbic.com/banks-in-%s.html", toupper(states[i]))
#print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
#print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
states <- read.csv("/Users/gummoxxx/Documents/dissertation_data/dissertation/data/index.csv", sep = ";") # 2017 - 2021
unique_states <- unique(states$Country)
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
require(tibble)
banks()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks_tible[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks_tibble[[i]] <- table
}
do.call("rbind", banks) %>%
as_tibble()
}
banks()
banks_tibble <- list()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
banks_tibble[[i]] <- table
}
do.call("rbind", banks_tibble) %>%
as_tibble()
}
banks()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
table$country <- rep(states[i], nrow(table))
# add row with country name still
banks_tibble[[i]] <- table
}
do.call("rbind", banks_tibble) %>%
as_tibble()
}
banks_tibble <- list()
banks()
view(banks_tibble)
banks_tibble <- list()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
table$country <- rep(states[i], nrow(table))
# add row with country name still
banks_tibble[[i]] <- table
}
banks_tibble <- do.call("rbind", banks_tibble) %>%
as_tibble()
}
banks()
banks_tibble <- list()
banks <- function(states = unique_states) {
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
table$country <- rep(states[i], nrow(table))
# add row with country name still
banks_tibble[[i]] <- table
}
banks_tibble <<- do.call("rbind", banks_tibble) %>%
as_tibble()
}
banks()
View(banks_tibble)
banks <- function(states = unique_states) {
banks_tibble <- list()
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
table$country <- rep(states[i], nrow(table))
# add row with country name still
banks_tibble[[i]] <- table
}
banks_tibble <<- do.call("rbind", banks_tibble) %>%
as_tibble()
}
rm(banks_tibble)
banks <- function(states = unique_states) {
banks_tibble <- list()
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
table$country <- rep(states[i], nrow(table))
# add row with country name still
banks_tibble[[i]] <- table
}
banks_tibble <<- do.call("rbind", banks_tibble) %>%
as_tibble()
}
banks()
View(banks_tibble)
?write.csv
banks <- function(states = unique_states) {
banks_tibble <- list()
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
table$country <- rep(states[i], nrow(table))
banks_tibble[[i]] <- table
}
banks_tibble <<- do.call("rbind", banks_tibble) %>%
as_tibble()
write.csv(banks_tibble, "banks.csv")
}
setwd("Users/gummoxxx/Documents/dissertation_data/dissertation")
setwd("/Users/gummoxxx/Documents/dissertation_data/dissertation")
ls
ls()
getwd()
states <- read.csv("/data/index.csv", sep = ";") # 2017 - 2021
states <- read.csv("data/index.csv", sep = ";") # 2017 - 2021
banks <- function(states = unique_states) {
banks_tibble <- list()
for (i in 1:length(states)) {
url <- sprintf("https://www.swiftbic.com/banks-in-%s.html", toupper(states[i]))
print(url)
html <- read_html(url)
table <- html_table(html)[[1]] %>%
as_tibble()
table$country <- rep(states[i], nrow(table))
banks_tibble[[i]] <- table
}
banks_tibble <<- do.call("rbind", banks_tibble) %>%
as_tibble()
write.csv(banks_tibble, "data/banks.csv")
}
banks()
read.csv("data/banks.csv") %>% nrow()
rm(banks_tibble)
banks()
read.csv("data/banks.csv") %>% nrow()
banks <- read.csv("data/banks.csv")
View(banks)
